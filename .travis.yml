language: c
cache: ccache
filter_secrets: false
git:
  submodules: false


stages:
  - test
  - downstream

jobs:
  include:
    - stage: test
      os: linux
      dist: xenial
      compiler: clang
      env:
        - ARCH=amd64
    - stage: test
      os: linux
      dist: xenial
      compiler: gcc
      env:
        - ARCH=amd64
    - stage: test
      os: osx
      osx_image: xcode10.1
      compiler: clang
      env: DEPLOY=skip
        - ARCH=amd64
      before_install:
        - mkdir -p ~/.local/bin
        - mkdir ~/junit
        - export PATH=/usr/local/opt/ccache/libexec:$HOME/.local/bin:$PATH
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install gnu-sed ccache e2fsprogs
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install binutils
        - pip install --user yamlish junit_xml
        - ln -sf /usr/local/bin/gsed ~/.local/bin/sed
        - ln -sf /usr/local/bin/gdate ~/.local/bin/date
        - ln -sf /usr/local/opt/e2fsprogs/sbin/mkfs.ext4 ~/.local/bin/
        - ln -sf /usr/local/opt/binutils/bin/objcopy ~/.local/bin/objcopy
    - stage: test
      os: osx
      osx_image: xcode10.2
      compiler: clang
      env:
        - ARCH=amd64
      before_install:
        - mkdir -p ~/.local/bin
        - mkdir ~/junit
        - export PATH=/usr/local/opt/ccache/libexec:$HOME/.local/bin:$PATH
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install gnu-sed ccache e2fsprogs
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install binutils
        - pip install --user yamlish junit_xml
        - ln -sf /usr/local/bin/gsed ~/.local/bin/sed
        - ln -sf /usr/local/bin/gdate ~/.local/bin/date
        - ln -sf /usr/local/opt/e2fsprogs/sbin/mkfs.ext4 ~/.local/bin/
        - ln -sf /usr/local/opt/binutils/bin/objcopy ~/.local/bin/objcopy
    - stage: test
      arch: arm64
      os: linux
      dist: xenial
      compiler: arm-linux-gnueabihf-gcc
      filter_secrets: false # https://travis-ci.community/t/arm64-required-filter-secrets-false/5403/2
      env:
        - ARCH=arm
      before_install:
        - sudo dpkg --add-architecture armhf
        - sudo apt-get update || true
        - sudo apt-get install libc6:armhf crossbuild-essential-armhf bc
    - stage: test
      arch: arm64
      os: linux
      dist: xenial
      compiler: gcc
      env:
        - ARCH=arm64
      before_install:
        - sudo apt-get update || true
        - sudo apt-get install bc
    - stage: test
      os: linux
      dist: xenial
      sudo: required
      compiler: gcc
      env:
        - ARCH=amd64
        - OS=solo5
      before_install:
        - sudo apt-get update
        - sudo apt-get install -y libseccomp-dev
        - sudo ip tuntap add tap100 mode tap
        - sudo ip addr add 10.0.0.1/24 dev tap100
        - sudo ip link set dev tap100 up
    - stage: downstream
      before_script:
      script: bash -e ./.travis-trigger.sh ukontainer/rumprun-packages lkl-musl
      os: linux
      if: branch = lkl-musl-macho

before_script:
  - travis_wait 30 git submodule update --init
  - export -f travis_fold
script:
  - sudo mkdir -p /opt/rump && sudo chown -R $USER /opt/
  - for file in `find patches/ -maxdepth 1 -type f` ; do patch -p1 < $file ; done
  - for file in `find patches/$TRAVIS_OS_NAME/ -maxdepth 1 -type f` ; do patch -p1 < $file ; done
  - travis_fold start "build.sh"
  - ./build.sh -d /opt/rump -q -k linux notest $OS
  - travis_fold end "build.sh"
  - RUMPDIR=/opt/rump RUMPOBJ=`pwd`/rumpobj make -C tests run
  - if [ $TRAVIS_REPO_SLUG == "ukontainer/frankenlibc" ] ; then bash -e ./.travis-deploy.sh $DEPLOY ; fi
